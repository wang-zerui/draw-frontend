{"version":3,"sources":["webpack:///./node_modules/codemirror/addon/edit/closebrackets.js","webpack:///./node_modules/codemirror/keymap/emacs.js","webpack:///./node_modules/codemirror/mode/python/python.js"],"names":["mod","CodeMirror","defaults","pairs","closeBefore","triples","explode","Pos","getOption","conf","name","defineOption","cm","val","old","Init","removeKeyMap","keyMap","state","closeBrackets","ensureBound","addKeyMap","Backspace","handleBackspace","Enter","handleEnter","chars","i","length","ch","charAt","key","handler","handleChar","getConfig","deflt","override","mode","getModeAt","getCursor","Pass","ranges","listSelections","empty","around","charsAround","head","indexOf","cur","replaceRange","line","operation","linesep","lineSeparator","replaceSelection","moveSel","indentLine","dir","newRanges","primary","range","pos","push","anchor","setSelections","contractSelection","sel","inverted","cmpPos","type","identical","opening","curType","next","getRange","test","getTokenTypeAt","prev","isWordChar","stringStartsAfter","left","right","sels","getSelections","replaceSelections","slice","triggerElectric","str","token","getTokenAt","start","cmds","commands","posEq","a","b","killRing","addToRing","shift","growRingTop","getFromRing","n","Math","min","popFromRing","pop","lastKill","_kill","from","to","ring","text","isClean","gen","changeGeneration","byChar","findPosH","byWord","byLine","findPosV","doc","goalColumn","byPage","byParagraph","no","getLine","sawText","fst","firstLine","lst","lastLine","clipPos","hasText","bySentence","sawWord","byExpr","wrap","findMatchingBracket","strict","match","forward","first","after","end","string","newPos","getPrefix","precise","digits","emacsPrefix","clearPrefix","Number","repeated","cmd","f","execCommand","prefix","findEnd","by","move","extendSelection","motion","killTo","cursor","selections","_killRegion","somethingSelected","selection","addPrefix","digit","on","maybeClearPrefix","maybeDuplicateInput","prefixPreservingKeys","arg","emacsPrefixMap","hasOwnProperty","off","event","dup","origin","one","join","txt","maybeRemovePrefixMap","prefixMap","clearMark","setExtending","setCursor","makePrompt","msg","fragment","document","createDocumentFragment","input","createElement","setAttribute","style","width","appendChild","createTextNode","getInput","openDialog","bottom","prompt","operateOnWord","op","toEnclosingExpr","stack","setMark","getExtending","killRegion","killLineEmacs","killRingSave","getSelection","yank","setSelection","yankPop","forwardChar","backwardChar","deleteChar","deleteForwardChar","deleteBackwardChar","forwardWord","backwardWord","killWord","backwardKillWord","nextLine","previousLine","scrollDownCommand","scrollUpCommand","backwardParagraph","forwardParagraph","backwardSentence","forwardSentence","killSentence","backwardKillSentence","killSexp","backwardKillSexp","forwardSexp","backwardSexp","markSexp","transposeSexps","leftStart","leftEnd","rightEnd","rightStart","backwardUpList","justOneSpace","openLine","transposeCharsRepeatable","capitalizeWord","w","letter","search","toUpperCase","toLowerCase","upcaseWord","downcaseWord","undoRepeatable","keyboardQuit","newline","gotoLine","num","isNaN","indentRigidly","indentSelection","exchangePointAndMark","quotedInsertTab","universalArgument","emacs","kill","normalizeKeyMap","regPrefix","d","String","wordRegexp","words","RegExp","wordOperators","commonKeywords","commonBuiltins","top","scopes","registerHelper","concat","defineMode","parserConf","ERRORCLASS","delimiters","singleDelimiters","operators","singleOperators","doubleOperators","doubleDelimiters","tripleDelimiters","splice","hangingIndent","indentUnit","myKeywords","myBuiltins","undefined","extra_keywords","extra_builtins","py3","version","identifiers","stringPrefixes","keywords","builtins","tokenBase","stream","sol","lastToken","indent","indentation","scopeOffset","offset","eatSpace","lineOffset","pushPyScope","dedent","peek","errorToken","tokenBaseInner","inFormat","floatLiteral","eat","intLiteral","isFmtString","current","tokenize","formatStringFactory","tokenStringFactory","delimiter","tokenOuter","substr","singleline","OUTCLASS","tokenNestedExpr","depth","inner","tokenString","eol","eatWhile","singleLineStringErrors","isString","align","pushBracketScope","column","indented","tokenLexer","beginningOfLine","lambda","delimiter_index","external","startState","basecolumn","addErr","textAfter","scope","closing","electricInput","lineComment","fold","defineMIME","split"],"mappings":"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","file":"js/chunk-4a296539.8effdb0d.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var defaults = {\n    pairs: \"()[]{}''\\\"\\\"\",\n    closeBefore: \")]}'\\\":;>\",\n    triples: \"\",\n    explode: \"[]{}\"\n  };\n\n  var Pos = CodeMirror.Pos;\n\n  CodeMirror.defineOption(\"autoCloseBrackets\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.removeKeyMap(keyMap);\n      cm.state.closeBrackets = null;\n    }\n    if (val) {\n      ensureBound(getOption(val, \"pairs\"))\n      cm.state.closeBrackets = val;\n      cm.addKeyMap(keyMap);\n    }\n  });\n\n  function getOption(conf, name) {\n    if (name == \"pairs\" && typeof conf == \"string\") return conf;\n    if (typeof conf == \"object\" && conf[name] != null) return conf[name];\n    return defaults[name];\n  }\n\n  var keyMap = {Backspace: handleBackspace, Enter: handleEnter};\n  function ensureBound(chars) {\n    for (var i = 0; i < chars.length; i++) {\n      var ch = chars.charAt(i), key = \"'\" + ch + \"'\"\n      if (!keyMap[key]) keyMap[key] = handler(ch)\n    }\n  }\n  ensureBound(defaults.pairs + \"`\")\n\n  function handler(ch) {\n    return function(cm) { return handleChar(cm, ch); };\n  }\n\n  function getConfig(cm) {\n    var deflt = cm.state.closeBrackets;\n    if (!deflt || deflt.override) return deflt;\n    var mode = cm.getModeAt(cm.getCursor());\n    return mode.closeBrackets || deflt;\n  }\n\n  function handleBackspace(cm) {\n    var conf = getConfig(cm);\n    if (!conf || cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n\n    var pairs = getOption(conf, \"pairs\");\n    var ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++) {\n      if (!ranges[i].empty()) return CodeMirror.Pass;\n      var around = charsAround(cm, ranges[i].head);\n      if (!around || pairs.indexOf(around) % 2 != 0) return CodeMirror.Pass;\n    }\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var cur = ranges[i].head;\n      cm.replaceRange(\"\", Pos(cur.line, cur.ch - 1), Pos(cur.line, cur.ch + 1), \"+delete\");\n    }\n  }\n\n  function handleEnter(cm) {\n    var conf = getConfig(cm);\n    var explode = conf && getOption(conf, \"explode\");\n    if (!explode || cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n\n    var ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++) {\n      if (!ranges[i].empty()) return CodeMirror.Pass;\n      var around = charsAround(cm, ranges[i].head);\n      if (!around || explode.indexOf(around) % 2 != 0) return CodeMirror.Pass;\n    }\n    cm.operation(function() {\n      var linesep = cm.lineSeparator() || \"\\n\";\n      cm.replaceSelection(linesep + linesep, null);\n      moveSel(cm, -1)\n      ranges = cm.listSelections();\n      for (var i = 0; i < ranges.length; i++) {\n        var line = ranges[i].head.line;\n        cm.indentLine(line, null, true);\n        cm.indentLine(line + 1, null, true);\n      }\n    });\n  }\n\n  function moveSel(cm, dir) {\n    var newRanges = [], ranges = cm.listSelections(), primary = 0\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i]\n      if (range.head == cm.getCursor()) primary = i\n      var pos = range.head.ch || dir > 0 ? {line: range.head.line, ch: range.head.ch + dir} : {line: range.head.line - 1}\n      newRanges.push({anchor: pos, head: pos})\n    }\n    cm.setSelections(newRanges, primary)\n  }\n\n  function contractSelection(sel) {\n    var inverted = CodeMirror.cmpPos(sel.anchor, sel.head) > 0;\n    return {anchor: new Pos(sel.anchor.line, sel.anchor.ch + (inverted ? -1 : 1)),\n            head: new Pos(sel.head.line, sel.head.ch + (inverted ? 1 : -1))};\n  }\n\n  function handleChar(cm, ch) {\n    var conf = getConfig(cm);\n    if (!conf || cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n\n    var pairs = getOption(conf, \"pairs\");\n    var pos = pairs.indexOf(ch);\n    if (pos == -1) return CodeMirror.Pass;\n\n    var closeBefore = getOption(conf,\"closeBefore\");\n\n    var triples = getOption(conf, \"triples\");\n\n    var identical = pairs.charAt(pos + 1) == ch;\n    var ranges = cm.listSelections();\n    var opening = pos % 2 == 0;\n\n    var type;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], cur = range.head, curType;\n      var next = cm.getRange(cur, Pos(cur.line, cur.ch + 1));\n      if (opening && !range.empty()) {\n        curType = \"surround\";\n      } else if ((identical || !opening) && next == ch) {\n        if (identical && stringStartsAfter(cm, cur))\n          curType = \"both\";\n        else if (triples.indexOf(ch) >= 0 && cm.getRange(cur, Pos(cur.line, cur.ch + 3)) == ch + ch + ch)\n          curType = \"skipThree\";\n        else\n          curType = \"skip\";\n      } else if (identical && cur.ch > 1 && triples.indexOf(ch) >= 0 &&\n                 cm.getRange(Pos(cur.line, cur.ch - 2), cur) == ch + ch) {\n        if (cur.ch > 2 && /\\bstring/.test(cm.getTokenTypeAt(Pos(cur.line, cur.ch - 2)))) return CodeMirror.Pass;\n        curType = \"addFour\";\n      } else if (identical) {\n        var prev = cur.ch == 0 ? \" \" : cm.getRange(Pos(cur.line, cur.ch - 1), cur)\n        if (!CodeMirror.isWordChar(next) && prev != ch && !CodeMirror.isWordChar(prev)) curType = \"both\";\n        else return CodeMirror.Pass;\n      } else if (opening && (next.length === 0 || /\\s/.test(next) || closeBefore.indexOf(next) > -1)) {\n        curType = \"both\";\n      } else {\n        return CodeMirror.Pass;\n      }\n      if (!type) type = curType;\n      else if (type != curType) return CodeMirror.Pass;\n    }\n\n    var left = pos % 2 ? pairs.charAt(pos - 1) : ch;\n    var right = pos % 2 ? ch : pairs.charAt(pos + 1);\n    cm.operation(function() {\n      if (type == \"skip\") {\n        moveSel(cm, 1)\n      } else if (type == \"skipThree\") {\n        moveSel(cm, 3)\n      } else if (type == \"surround\") {\n        var sels = cm.getSelections();\n        for (var i = 0; i < sels.length; i++)\n          sels[i] = left + sels[i] + right;\n        cm.replaceSelections(sels, \"around\");\n        sels = cm.listSelections().slice();\n        for (var i = 0; i < sels.length; i++)\n          sels[i] = contractSelection(sels[i]);\n        cm.setSelections(sels);\n      } else if (type == \"both\") {\n        cm.replaceSelection(left + right, null);\n        cm.triggerElectric(left + right);\n        moveSel(cm, -1)\n      } else if (type == \"addFour\") {\n        cm.replaceSelection(left + left + left + left, \"before\");\n        moveSel(cm, 1)\n      }\n    });\n  }\n\n  function charsAround(cm, pos) {\n    var str = cm.getRange(Pos(pos.line, pos.ch - 1),\n                          Pos(pos.line, pos.ch + 1));\n    return str.length == 2 ? str : null;\n  }\n\n  function stringStartsAfter(cm, pos) {\n    var token = cm.getTokenAt(Pos(pos.line, pos.ch + 1))\n    return /\\bstring/.test(token.type) && token.start == pos.ch &&\n      (pos.ch == 0 || !/\\bstring/.test(cm.getTokenTypeAt(pos)))\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n  function posEq(a, b) { return a.line == b.line && a.ch == b.ch; }\n\n  // Kill 'ring'\n\n  var killRing = [];\n  function addToRing(str) {\n    killRing.push(str);\n    if (killRing.length > 50) killRing.shift();\n  }\n  function growRingTop(str) {\n    if (!killRing.length) return addToRing(str);\n    killRing[killRing.length - 1] += str;\n  }\n  function getFromRing(n) { return killRing[killRing.length - (n ? Math.min(n, 1) : 1)] || \"\"; }\n  function popFromRing() { if (killRing.length > 1) killRing.pop(); return getFromRing(); }\n\n  var lastKill = null;\n\n  // Internal generic kill function, used by several mapped kill \"family\" functions.\n  function _kill(cm, from, to, ring, text) {\n    if (text == null) text = cm.getRange(from, to);\n\n    if (ring == \"grow\" && lastKill && lastKill.cm == cm && posEq(from, lastKill.pos) && cm.isClean(lastKill.gen))\n      growRingTop(text);\n    else if (ring !== false)\n      addToRing(text);\n    cm.replaceRange(\"\", from, to, \"+delete\");\n\n    if (ring == \"grow\") lastKill = {cm: cm, pos: from, gen: cm.changeGeneration()};\n    else lastKill = null;\n  }\n\n  // Boundaries of various units\n\n  function byChar(cm, pos, dir) {\n    return cm.findPosH(pos, dir, \"char\", true);\n  }\n\n  function byWord(cm, pos, dir) {\n    return cm.findPosH(pos, dir, \"word\", true);\n  }\n\n  function byLine(cm, pos, dir) {\n    return cm.findPosV(pos, dir, \"line\", cm.doc.sel.goalColumn);\n  }\n\n  function byPage(cm, pos, dir) {\n    return cm.findPosV(pos, dir, \"page\", cm.doc.sel.goalColumn);\n  }\n\n  function byParagraph(cm, pos, dir) {\n    var no = pos.line, line = cm.getLine(no);\n    var sawText = /\\S/.test(dir < 0 ? line.slice(0, pos.ch) : line.slice(pos.ch));\n    var fst = cm.firstLine(), lst = cm.lastLine();\n    for (;;) {\n      no += dir;\n      if (no < fst || no > lst)\n        return cm.clipPos(Pos(no - dir, dir < 0 ? 0 : null));\n      line = cm.getLine(no);\n      var hasText = /\\S/.test(line);\n      if (hasText) sawText = true;\n      else if (sawText) return Pos(no, 0);\n    }\n  }\n\n  function bySentence(cm, pos, dir) {\n    var line = pos.line, ch = pos.ch;\n    var text = cm.getLine(pos.line), sawWord = false;\n    for (;;) {\n      var next = text.charAt(ch + (dir < 0 ? -1 : 0));\n      if (!next) { // End/beginning of line reached\n        if (line == (dir < 0 ? cm.firstLine() : cm.lastLine())) return Pos(line, ch);\n        text = cm.getLine(line + dir);\n        if (!/\\S/.test(text)) return Pos(line, ch);\n        line += dir;\n        ch = dir < 0 ? text.length : 0;\n        continue;\n      }\n      if (sawWord && /[!?.]/.test(next)) return Pos(line, ch + (dir > 0 ? 1 : 0));\n      if (!sawWord) sawWord = /\\w/.test(next);\n      ch += dir;\n    }\n  }\n\n  function byExpr(cm, pos, dir) {\n    var wrap;\n    if (cm.findMatchingBracket && (wrap = cm.findMatchingBracket(pos, {strict: true}))\n        && wrap.match && (wrap.forward ? 1 : -1) == dir)\n      return dir > 0 ? Pos(wrap.to.line, wrap.to.ch + 1) : wrap.to;\n\n    for (var first = true;; first = false) {\n      var token = cm.getTokenAt(pos);\n      var after = Pos(pos.line, dir < 0 ? token.start : token.end);\n      if (first && dir > 0 && token.end == pos.ch || !/\\w/.test(token.string)) {\n        var newPos = cm.findPosH(after, dir, \"char\");\n        if (posEq(after, newPos)) return pos;\n        else pos = newPos;\n      } else {\n        return after;\n      }\n    }\n  }\n\n  // Prefixes (only crudely supported)\n\n  function getPrefix(cm, precise) {\n    var digits = cm.state.emacsPrefix;\n    if (!digits) return precise ? null : 1;\n    clearPrefix(cm);\n    return digits == \"-\" ? -1 : Number(digits);\n  }\n\n  function repeated(cmd) {\n    var f = typeof cmd == \"string\" ? function(cm) { cm.execCommand(cmd); } : cmd;\n    return function(cm) {\n      var prefix = getPrefix(cm);\n      f(cm);\n      for (var i = 1; i < prefix; ++i) f(cm);\n    };\n  }\n\n  function findEnd(cm, pos, by, dir) {\n    var prefix = getPrefix(cm);\n    if (prefix < 0) { dir = -dir; prefix = -prefix; }\n    for (var i = 0; i < prefix; ++i) {\n      var newPos = by(cm, pos, dir);\n      if (posEq(newPos, pos)) break;\n      pos = newPos;\n    }\n    return pos;\n  }\n\n  function move(by, dir) {\n    var f = function(cm) {\n      cm.extendSelection(findEnd(cm, cm.getCursor(), by, dir));\n    };\n    f.motion = true;\n    return f;\n  }\n\n  function killTo(cm, by, dir, ring) {\n    var selections = cm.listSelections(), cursor;\n    var i = selections.length;\n    while (i--) {\n      cursor = selections[i].head;\n      _kill(cm, cursor, findEnd(cm, cursor, by, dir), ring);\n    }\n  }\n\n  function _killRegion(cm, ring) {\n    if (cm.somethingSelected()) {\n      var selections = cm.listSelections(), selection;\n      var i = selections.length;\n      while (i--) {\n        selection = selections[i];\n        _kill(cm, selection.anchor, selection.head, ring);\n      }\n      return true;\n    }\n  }\n\n  function addPrefix(cm, digit) {\n    if (cm.state.emacsPrefix) {\n      if (digit != \"-\") cm.state.emacsPrefix += digit;\n      return;\n    }\n    // Not active yet\n    cm.state.emacsPrefix = digit;\n    cm.on(\"keyHandled\", maybeClearPrefix);\n    cm.on(\"inputRead\", maybeDuplicateInput);\n  }\n\n  var prefixPreservingKeys = {\"Alt-G\": true, \"Ctrl-X\": true, \"Ctrl-Q\": true, \"Ctrl-U\": true};\n\n  function maybeClearPrefix(cm, arg) {\n    if (!cm.state.emacsPrefixMap && !prefixPreservingKeys.hasOwnProperty(arg))\n      clearPrefix(cm);\n  }\n\n  function clearPrefix(cm) {\n    cm.state.emacsPrefix = null;\n    cm.off(\"keyHandled\", maybeClearPrefix);\n    cm.off(\"inputRead\", maybeDuplicateInput);\n  }\n\n  function maybeDuplicateInput(cm, event) {\n    var dup = getPrefix(cm);\n    if (dup > 1 && event.origin == \"+input\") {\n      var one = event.text.join(\"\\n\"), txt = \"\";\n      for (var i = 1; i < dup; ++i) txt += one;\n      cm.replaceSelection(txt);\n    }\n  }\n\n  function maybeRemovePrefixMap(cm, arg) {\n    if (typeof arg == \"string\" && (/^\\d$/.test(arg) || arg == \"Ctrl-U\")) return;\n    cm.removeKeyMap(prefixMap);\n    cm.state.emacsPrefixMap = false;\n    cm.off(\"keyHandled\", maybeRemovePrefixMap);\n    cm.off(\"inputRead\", maybeRemovePrefixMap);\n  }\n\n  // Utilities\n\n  cmds.setMark = function (cm) {\n    cm.setCursor(cm.getCursor());\n    cm.setExtending(!cm.getExtending());\n    cm.on(\"change\", function() { cm.setExtending(false); });\n  }\n\n  function clearMark(cm) {\n    cm.setExtending(false);\n    cm.setCursor(cm.getCursor());\n  }\n\n  function makePrompt(msg) {\n    var fragment = document.createDocumentFragment();\n    var input = document.createElement(\"input\");\n    input.setAttribute(\"type\", \"text\");\n    input.style.width = \"10em\";\n    fragment.appendChild(document.createTextNode(msg + \": \"));\n    fragment.appendChild(input);\n    return fragment;\n  }\n\n  function getInput(cm, msg, f) {\n    if (cm.openDialog)\n      cm.openDialog(makePrompt(msg), f, {bottom: true});\n    else\n      f(prompt(msg, \"\"));\n  }\n\n  function operateOnWord(cm, op) {\n    var start = cm.getCursor(), end = cm.findPosH(start, 1, \"word\");\n    cm.replaceRange(op(cm.getRange(start, end)), start, end);\n    cm.setCursor(end);\n  }\n\n  function toEnclosingExpr(cm) {\n    var pos = cm.getCursor(), line = pos.line, ch = pos.ch;\n    var stack = [];\n    while (line >= cm.firstLine()) {\n      var text = cm.getLine(line);\n      for (var i = ch == null ? text.length : ch; i > 0;) {\n        var ch = text.charAt(--i);\n        if (ch == \")\")\n          stack.push(\"(\");\n        else if (ch == \"]\")\n          stack.push(\"[\");\n        else if (ch == \"}\")\n          stack.push(\"{\");\n        else if (/[\\(\\{\\[]/.test(ch) && (!stack.length || stack.pop() != ch))\n          return cm.extendSelection(Pos(line, i));\n      }\n      --line; ch = null;\n    }\n  }\n\n  // Commands. Names should match emacs function names (albeit in camelCase)\n  // except where emacs function names collide with code mirror core commands.\n\n  cmds.killRegion = function(cm) {\n    _kill(cm, cm.getCursor(\"start\"), cm.getCursor(\"end\"), true);\n  };\n\n  // Maps to emacs kill-line\n  cmds.killLineEmacs = repeated(function(cm) {\n    var start = cm.getCursor(), end = cm.clipPos(Pos(start.line));\n    var text = cm.getRange(start, end);\n    if (!/\\S/.test(text)) {\n      text += \"\\n\";\n      end = Pos(start.line + 1, 0);\n    }\n    _kill(cm, start, end, \"grow\", text);\n  });\n\n  cmds.killRingSave = function(cm) {\n    addToRing(cm.getSelection());\n    clearMark(cm);\n  };\n\n  cmds.yank = function(cm) {\n    var start = cm.getCursor();\n    cm.replaceRange(getFromRing(getPrefix(cm)), start, start, \"paste\");\n    cm.setSelection(start, cm.getCursor());\n  };\n\n  cmds.yankPop = function(cm) {\n    cm.replaceSelection(popFromRing(), \"around\", \"paste\");\n  };\n\n  cmds.forwardChar = move(byChar, 1);\n\n  cmds.backwardChar = move(byChar, -1)\n\n  cmds.deleteChar = function(cm) { killTo(cm, byChar, 1, false); };\n\n  cmds.deleteForwardChar = function(cm) {\n    _killRegion(cm, false) || killTo(cm, byChar, 1, false);\n  };\n\n  cmds.deleteBackwardChar = function(cm) {\n    _killRegion(cm, false) || killTo(cm, byChar, -1, false);\n  };\n\n  cmds.forwardWord = move(byWord, 1);\n\n  cmds.backwardWord = move(byWord, -1);\n\n  cmds.killWord = function(cm) { killTo(cm, byWord, 1, \"grow\"); };\n\n  cmds.backwardKillWord = function(cm) { killTo(cm, byWord, -1, \"grow\"); };\n\n  cmds.nextLine = move(byLine, 1);\n\n  cmds.previousLine = move(byLine, -1);\n\n  cmds.scrollDownCommand = move(byPage, -1);\n\n  cmds.scrollUpCommand = move(byPage, 1);\n\n  cmds.backwardParagraph = move(byParagraph, -1);\n\n  cmds.forwardParagraph = move(byParagraph, 1);\n\n  cmds.backwardSentence = move(bySentence, -1);\n\n  cmds.forwardSentence = move(bySentence, 1);\n\n  cmds.killSentence = function(cm) { killTo(cm, bySentence, 1, \"grow\"); };\n\n  cmds.backwardKillSentence = function(cm) {\n    _kill(cm, cm.getCursor(), bySentence(cm, cm.getCursor(), 1), \"grow\");\n  };\n\n  cmds.killSexp = function(cm) { killTo(cm, byExpr, 1, \"grow\"); };\n\n  cmds.backwardKillSexp = function(cm) { killTo(cm, byExpr, -1, \"grow\"); };\n\n  cmds.forwardSexp = move(byExpr, 1);\n\n  cmds.backwardSexp = move(byExpr, -1);\n\n  cmds.markSexp = function(cm) {\n    var cursor = cm.getCursor();\n    cm.setSelection(findEnd(cm, cursor, byExpr, 1), cursor);\n  };\n\n  cmds.transposeSexps = function(cm) {\n    var leftStart = byExpr(cm, cm.getCursor(), -1);\n    var leftEnd = byExpr(cm, leftStart, 1);\n    var rightEnd = byExpr(cm, leftEnd, 1);\n    var rightStart = byExpr(cm, rightEnd, -1);\n    cm.replaceRange(cm.getRange(rightStart, rightEnd) +\n                    cm.getRange(leftEnd, rightStart) +\n                    cm.getRange(leftStart, leftEnd), leftStart, rightEnd);\n  };\n\n  cmds.backwardUpList = repeated(toEnclosingExpr);\n\n  cmds.justOneSpace = function(cm) {\n    var pos = cm.getCursor(), from = pos.ch;\n    var to = pos.ch, text = cm.getLine(pos.line);\n    while (from && /\\s/.test(text.charAt(from - 1))) --from;\n    while (to < text.length && /\\s/.test(text.charAt(to))) ++to;\n    cm.replaceRange(\" \", Pos(pos.line, from), Pos(pos.line, to));\n  };\n\n  cmds.openLine = repeated(function(cm) {\n    cm.replaceSelection(\"\\n\", \"start\");\n  });\n\n  // maps to emacs 'transpose-chars'\n  cmds.transposeCharsRepeatable = repeated(function(cm) {\n    cm.execCommand(\"transposeChars\");\n  });\n\n  cmds.capitalizeWord = repeated(function(cm) {\n    operateOnWord(cm, function(w) {\n      var letter = w.search(/\\w/);\n      if (letter == -1) return w;\n      return w.slice(0, letter) + w.charAt(letter).toUpperCase() +\n          w.slice(letter + 1).toLowerCase();\n    });\n  });\n\n  cmds.upcaseWord = repeated(function(cm) {\n    operateOnWord(cm, function(w) { return w.toUpperCase(); });\n  });\n\n  cmds.downcaseWord = repeated(function(cm) {\n    operateOnWord(cm, function(w) { return w.toLowerCase(); });\n  });\n\n  // maps to emacs 'undo'\n  cmds.undoRepeatable = repeated(\"undo\");\n\n  cmds.keyboardQuit = function(cm) {\n    cm.execCommand(\"clearSearch\");\n    clearMark(cm);\n  }\n\n  cmds.newline = repeated(function(cm) { cm.replaceSelection(\"\\n\", \"end\"); });\n\n  cmds.gotoLine = function(cm) {\n    var prefix = getPrefix(cm, true);\n    if (prefix != null && prefix > 0) return cm.setCursor(prefix - 1);\n\n    getInput(cm, \"Goto line\", function(str) {\n      var num;\n      if (str && !isNaN(num = Number(str)) && num == (num|0) && num > 0)\n      cm.setCursor(num - 1);\n    });\n  };\n\n  cmds.indentRigidly = function(cm) {\n    cm.indentSelection(getPrefix(cm, true) || cm.getOption(\"indentUnit\"));\n  };\n\n  cmds.exchangePointAndMark = function(cm) {\n    cm.setSelection(cm.getCursor(\"head\"), cm.getCursor(\"anchor\"));\n  };\n\n  cmds.quotedInsertTab = repeated(\"insertTab\");\n\n  cmds.universalArgument = function addPrefixMap(cm) {\n    cm.state.emacsPrefixMap = true;\n    cm.addKeyMap(prefixMap);\n    cm.on(\"keyHandled\", maybeRemovePrefixMap);\n    cm.on(\"inputRead\", maybeRemovePrefixMap);\n  };\n\n  CodeMirror.emacs = {kill: _kill, killRegion: _killRegion, repeated: repeated};\n\n  // Actual keymap\n  var keyMap = CodeMirror.keyMap.emacs = CodeMirror.normalizeKeyMap({\n    \"Ctrl-W\": \"killRegion\",\n    \"Ctrl-K\": \"killLineEmacs\",\n    \"Alt-W\": \"killRingSave\",\n    \"Ctrl-Y\": \"yank\",\n    \"Alt-Y\": \"yankPop\",\n    \"Ctrl-Space\": \"setMark\",\n    \"Ctrl-Shift-2\": \"setMark\",\n    \"Ctrl-F\": \"forwardChar\",\n    \"Ctrl-B\": \"backwardChar\",\n    \"Right\": \"forwardChar\",\n    \"Left\": \"backwardChar\",\n    \"Ctrl-D\": \"deleteChar\",\n    \"Delete\": \"deleteForwardChar\",\n    \"Ctrl-H\": \"deleteBackwardChar\",\n    \"Backspace\": \"deleteBackwardChar\",\n    \"Alt-F\": \"forwardWord\",\n    \"Alt-B\": \"backwardWord\",\n    \"Alt-Right\": \"forwardWord\",\n    \"Alt-Left\": \"backwardWord\",\n    \"Alt-D\": \"killWord\",\n    \"Alt-Backspace\": \"backwardKillWord\",\n    \"Ctrl-N\": \"nextLine\",\n    \"Ctrl-P\": \"previousLine\",\n    \"Down\": \"nextLine\",\n    \"Up\": \"previousLine\",\n    \"Ctrl-A\": \"goLineStart\",\n    \"Ctrl-E\": \"goLineEnd\",\n    \"End\": \"goLineEnd\",\n    \"Home\": \"goLineStart\",\n    \"Alt-V\": \"scrollDownCommand\",\n    \"Ctrl-V\": \"scrollUpCommand\",\n    \"PageUp\": \"scrollDownCommand\",\n    \"PageDown\": \"scrollUpCommand\",\n    \"Ctrl-Up\": \"backwardParagraph\",\n    \"Ctrl-Down\": \"forwardParagraph\",\n    \"Alt-{\": \"backwardParagraph\",\n    \"Alt-}\": \"forwardParagraph\",\n    \"Alt-A\": \"backwardSentence\",\n    \"Alt-E\": \"forwardSentence\",\n    \"Alt-K\": \"killSentence\",\n    \"Ctrl-X Delete\": \"backwardKillSentence\",\n    \"Ctrl-Alt-K\": \"killSexp\",\n    \"Ctrl-Alt-Backspace\": \"backwardKillSexp\",\n    \"Ctrl-Alt-F\": \"forwardSexp\",\n    \"Ctrl-Alt-B\": \"backwardSexp\",\n    \"Shift-Ctrl-Alt-2\": \"markSexp\",\n    \"Ctrl-Alt-T\": \"transposeSexps\",\n    \"Ctrl-Alt-U\": \"backwardUpList\",\n    \"Alt-Space\": \"justOneSpace\",\n    \"Ctrl-O\": \"openLine\",\n    \"Ctrl-T\": \"transposeCharsRepeatable\",\n    \"Alt-C\": \"capitalizeWord\",\n    \"Alt-U\": \"upcaseWord\",\n    \"Alt-L\": \"downcaseWord\",\n    \"Alt-;\": \"toggleComment\",\n    \"Ctrl-/\": \"undoRepeatable\",\n    \"Shift-Ctrl--\": \"undoRepeatable\",\n    \"Ctrl-Z\": \"undoRepeatable\",\n    \"Cmd-Z\": \"undoRepeatable\",\n    \"Ctrl-X U\": \"undoRepeatable\",\n    \"Shift-Ctrl-Z\": \"redo\",\n    \"Shift-Alt-,\": \"goDocStart\",\n    \"Shift-Alt-.\": \"goDocEnd\",\n    \"Ctrl-S\": \"findPersistentNext\",\n    \"Ctrl-R\": \"findPersistentPrev\",\n    \"Ctrl-G\": \"keyboardQuit\",\n    \"Shift-Alt-5\": \"replace\",\n    \"Alt-/\": \"autocomplete\",\n    \"Enter\": \"newlineAndIndent\",\n    \"Ctrl-J\": \"newline\",\n    \"Tab\": \"indentAuto\",\n    \"Alt-G G\": \"gotoLine\",\n    \"Ctrl-X Tab\": \"indentRigidly\",\n    \"Ctrl-X Ctrl-X\": \"exchangePointAndMark\",\n    \"Ctrl-X Ctrl-S\": \"save\",\n    \"Ctrl-X Ctrl-W\": \"save\",\n    \"Ctrl-X S\": \"saveAll\",\n    \"Ctrl-X F\": \"open\",\n    \"Ctrl-X K\": \"close\",\n    \"Ctrl-X H\": \"selectAll\",\n    \"Ctrl-Q Tab\": \"quotedInsertTab\",\n    \"Ctrl-U\": \"universalArgument\",\n    \"fallthrough\": \"default\"\n  });\n\n  var prefixMap = {\"Ctrl-G\": clearPrefix};\n  function regPrefix(d) {\n    prefixMap[d] = function(cm) { addPrefix(cm, d); };\n    keyMap[\"Ctrl-\" + d] = function(cm) { addPrefix(cm, d); };\n    prefixPreservingKeys[\"Ctrl-\" + d] = true;\n  }\n  for (var i = 0; i < 10; ++i) regPrefix(String(i));\n  regPrefix(\"-\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\"]);\n  var commonKeywords = [\"as\", \"assert\", \"break\", \"class\", \"continue\",\n                        \"def\", \"del\", \"elif\", \"else\", \"except\", \"finally\",\n                        \"for\", \"from\", \"global\", \"if\", \"import\",\n                        \"lambda\", \"pass\", \"raise\", \"return\",\n                        \"try\", \"while\", \"with\", \"yield\", \"in\"];\n  var commonBuiltins = [\"abs\", \"all\", \"any\", \"bin\", \"bool\", \"bytearray\", \"callable\", \"chr\",\n                        \"classmethod\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\",\n                        \"enumerate\", \"eval\", \"filter\", \"float\", \"format\", \"frozenset\",\n                        \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\",\n                        \"input\", \"int\", \"isinstance\", \"issubclass\", \"iter\", \"len\",\n                        \"list\", \"locals\", \"map\", \"max\", \"memoryview\", \"min\", \"next\",\n                        \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"property\", \"range\",\n                        \"repr\", \"reversed\", \"round\", \"set\", \"setattr\", \"slice\",\n                        \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\",\n                        \"type\", \"vars\", \"zip\", \"__import__\", \"NotImplemented\",\n                        \"Ellipsis\", \"__debug__\"];\n  CodeMirror.registerHelper(\"hintWords\", \"python\", commonKeywords.concat(commonBuiltins));\n\n  function top(state) {\n    return state.scopes[state.scopes.length - 1];\n  }\n\n  CodeMirror.defineMode(\"python\", function(conf, parserConf) {\n    var ERRORCLASS = \"error\";\n\n    var delimiters = parserConf.delimiters || parserConf.singleDelimiters || /^[\\(\\)\\[\\]\\{\\}@,:`=;\\.\\\\]/;\n    //               (Backwards-compatibility with old, cumbersome config system)\n    var operators = [parserConf.singleOperators, parserConf.doubleOperators, parserConf.doubleDelimiters, parserConf.tripleDelimiters,\n                     parserConf.operators || /^([-+*/%\\/&|^]=?|[<>=]+|\\/\\/=?|\\*\\*=?|!=|[~!@]|\\.\\.\\.)/]\n    for (var i = 0; i < operators.length; i++) if (!operators[i]) operators.splice(i--, 1)\n\n    var hangingIndent = parserConf.hangingIndent || conf.indentUnit;\n\n    var myKeywords = commonKeywords, myBuiltins = commonBuiltins;\n    if (parserConf.extra_keywords != undefined)\n      myKeywords = myKeywords.concat(parserConf.extra_keywords);\n\n    if (parserConf.extra_builtins != undefined)\n      myBuiltins = myBuiltins.concat(parserConf.extra_builtins);\n\n    var py3 = !(parserConf.version && Number(parserConf.version) < 3)\n    if (py3) {\n      // since http://legacy.python.org/dev/peps/pep-0465/ @ is also an operator\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*/;\n      myKeywords = myKeywords.concat([\"nonlocal\", \"False\", \"True\", \"None\", \"async\", \"await\"]);\n      myBuiltins = myBuiltins.concat([\"ascii\", \"bytes\", \"exec\", \"print\"]);\n      var stringPrefixes = new RegExp(\"^(([rbuf]|(br)|(rb)|(fr)|(rf))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    } else {\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z][_A-Za-z0-9]*/;\n      myKeywords = myKeywords.concat([\"exec\", \"print\"]);\n      myBuiltins = myBuiltins.concat([\"apply\", \"basestring\", \"buffer\", \"cmp\", \"coerce\", \"execfile\",\n                                      \"file\", \"intern\", \"long\", \"raw_input\", \"reduce\", \"reload\",\n                                      \"unichr\", \"unicode\", \"xrange\", \"False\", \"True\", \"None\"]);\n      var stringPrefixes = new RegExp(\"^(([rubf]|(ur)|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    }\n    var keywords = wordRegexp(myKeywords);\n    var builtins = wordRegexp(myBuiltins);\n\n    // tokenizers\n    function tokenBase(stream, state) {\n      var sol = stream.sol() && state.lastToken != \"\\\\\"\n      if (sol) state.indent = stream.indentation()\n      // Handle scope changes\n      if (sol && top(state).type == \"py\") {\n        var scopeOffset = top(state).offset;\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n          if (lineOffset > scopeOffset)\n            pushPyScope(state);\n          else if (lineOffset < scopeOffset && dedent(stream, state) && stream.peek() != \"#\")\n            state.errorToken = true;\n          return null;\n        } else {\n          var style = tokenBaseInner(stream, state);\n          if (scopeOffset > 0 && dedent(stream, state))\n            style += \" \" + ERRORCLASS;\n          return style;\n        }\n      }\n      return tokenBaseInner(stream, state);\n    }\n\n    function tokenBaseInner(stream, state, inFormat) {\n      if (stream.eatSpace()) return null;\n\n      // Handle Comments\n      if (!inFormat && stream.match(/^#.*/)) return \"comment\";\n\n      // Handle Number Literals\n      if (stream.match(/^[0-9\\.]/, false)) {\n        var floatLiteral = false;\n        // Floats\n        if (stream.match(/^[\\d_]*\\.\\d+(e[\\+\\-]?\\d+)?/i)) { floatLiteral = true; }\n        if (stream.match(/^[\\d_]+\\.\\d*/)) { floatLiteral = true; }\n        if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n        if (floatLiteral) {\n          // Float literals may be \"imaginary\"\n          stream.eat(/J/i);\n          return \"number\";\n        }\n        // Integers\n        var intLiteral = false;\n        // Hex\n        if (stream.match(/^0x[0-9a-f_]+/i)) intLiteral = true;\n        // Binary\n        if (stream.match(/^0b[01_]+/i)) intLiteral = true;\n        // Octal\n        if (stream.match(/^0o[0-7_]+/i)) intLiteral = true;\n        // Decimal\n        if (stream.match(/^[1-9][\\d_]*(e[\\+\\-]?[\\d_]+)?/)) {\n          // Decimal literals may be \"imaginary\"\n          stream.eat(/J/i);\n          // TODO - Can you have imaginary longs?\n          intLiteral = true;\n        }\n        // Zero by itself with no other piece of number.\n        if (stream.match(/^0(?![\\dx])/i)) intLiteral = true;\n        if (intLiteral) {\n          // Integer literals may be \"long\"\n          stream.eat(/L/i);\n          return \"number\";\n        }\n      }\n\n      // Handle Strings\n      if (stream.match(stringPrefixes)) {\n        var isFmtString = stream.current().toLowerCase().indexOf('f') !== -1;\n        if (!isFmtString) {\n          state.tokenize = tokenStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        } else {\n          state.tokenize = formatStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        }\n      }\n\n      for (var i = 0; i < operators.length; i++)\n        if (stream.match(operators[i])) return \"operator\"\n\n      if (stream.match(delimiters)) return \"punctuation\";\n\n      if (state.lastToken == \".\" && stream.match(identifiers))\n        return \"property\";\n\n      if (stream.match(keywords) || stream.match(wordOperators))\n        return \"keyword\";\n\n      if (stream.match(builtins))\n        return \"builtin\";\n\n      if (stream.match(/^(self|cls)\\b/))\n        return \"variable-2\";\n\n      if (stream.match(identifiers)) {\n        if (state.lastToken == \"def\" || state.lastToken == \"class\")\n          return \"def\";\n        return \"variable\";\n      }\n\n      // Handle non-detected items\n      stream.next();\n      return inFormat ? null :ERRORCLASS;\n    }\n\n    function formatStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenNestedExpr(depth) {\n        return function(stream, state) {\n          var inner = tokenBaseInner(stream, state, true)\n          if (inner == \"punctuation\") {\n            if (stream.current() == \"{\") {\n              state.tokenize = tokenNestedExpr(depth + 1)\n            } else if (stream.current() == \"}\") {\n              if (depth > 1) state.tokenize = tokenNestedExpr(depth - 1)\n              else state.tokenize = tokenString\n            }\n          }\n          return inner\n        }\n      }\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\{\\}\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else if (stream.match('{{')) {\n            // ignore {{ in f-str\n            return OUTCLASS;\n          } else if (stream.match('{', false)) {\n            // switch to nested mode\n            state.tokenize = tokenNestedExpr(0)\n            if (stream.current()) return OUTCLASS;\n            else return state.tokenize(stream, state)\n          } else if (stream.match('}}')) {\n            return OUTCLASS;\n          } else if (stream.match('}')) {\n            // single } in f-string is an error\n            return ERRORCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function tokenStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function pushPyScope(state) {\n      while (top(state).type != \"py\") state.scopes.pop()\n      state.scopes.push({offset: top(state).offset + conf.indentUnit,\n                         type: \"py\",\n                         align: null})\n    }\n\n    function pushBracketScope(stream, state, type) {\n      var align = stream.match(/^[\\s\\[\\{\\(]*(?:#|$)/, false) ? null : stream.column() + 1\n      state.scopes.push({offset: state.indent + hangingIndent,\n                         type: type,\n                         align: align})\n    }\n\n    function dedent(stream, state) {\n      var indented = stream.indentation();\n      while (state.scopes.length > 1 && top(state).offset > indented) {\n        if (top(state).type != \"py\") return true;\n        state.scopes.pop();\n      }\n      return top(state).offset != indented;\n    }\n\n    function tokenLexer(stream, state) {\n      if (stream.sol()) {\n        state.beginningOfLine = true;\n        state.dedent = false;\n      }\n\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      // Handle decorators\n      if (state.beginningOfLine && current == \"@\")\n        return stream.match(identifiers, false) ? \"meta\" : py3 ? \"operator\" : ERRORCLASS;\n\n      if (/\\S/.test(current)) state.beginningOfLine = false;\n\n      if ((style == \"variable\" || style == \"builtin\")\n          && state.lastToken == \"meta\")\n        style = \"meta\";\n\n      // Handle scope changes.\n      if (current == \"pass\" || current == \"return\")\n        state.dedent = true;\n\n      if (current == \"lambda\") state.lambda = true;\n      if (current == \":\" && !state.lambda && top(state).type == \"py\" && stream.match(/^\\s*(?:#|$)/, false))\n        pushPyScope(state);\n\n      if (current.length == 1 && !/string|comment/.test(style)) {\n        var delimiter_index = \"[({\".indexOf(current);\n        if (delimiter_index != -1)\n          pushBracketScope(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n\n        delimiter_index = \"])}\".indexOf(current);\n        if (delimiter_index != -1) {\n          if (top(state).type == current) state.indent = state.scopes.pop().offset - hangingIndent\n          else return ERRORCLASS;\n        }\n      }\n      if (state.dedent && stream.eol() && top(state).type == \"py\" && state.scopes.length > 1)\n        state.scopes.pop();\n\n      return style;\n    }\n\n    var external = {\n      startState: function(basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scopes: [{offset: basecolumn || 0, type: \"py\", align: null}],\n          indent: basecolumn || 0,\n          lastToken: null,\n          lambda: false,\n          dedent: 0\n        };\n      },\n\n      token: function(stream, state) {\n        var addErr = state.errorToken;\n        if (addErr) state.errorToken = false;\n        var style = tokenLexer(stream, state);\n\n        if (style && style != \"comment\")\n          state.lastToken = (style == \"keyword\" || style == \"punctuation\") ? stream.current() : style;\n        if (style == \"punctuation\") style = null;\n\n        if (stream.eol() && state.lambda)\n          state.lambda = false;\n        return addErr ? style + \" \" + ERRORCLASS : style;\n      },\n\n      indent: function(state, textAfter) {\n        if (state.tokenize != tokenBase)\n          return state.tokenize.isString ? CodeMirror.Pass : 0;\n\n        var scope = top(state)\n        var closing = scope.type == textAfter.charAt(0) ||\n            scope.type == \"py\" && !state.dedent && /^(else:|elif |except |finally:)/.test(textAfter)\n        if (scope.align != null)\n          return scope.align - (closing ? 1 : 0)\n        else\n          return scope.offset - (closing ? hangingIndent : 0)\n      },\n\n      electricInput: /^\\s*([\\}\\]\\)]|else:|elif |except |finally:)$/,\n      closeBrackets: {triples: \"'\\\"\"},\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  });\n\n  CodeMirror.defineMIME(\"text/x-python\", \"python\");\n\n  var words = function(str) { return str.split(\" \"); };\n\n  CodeMirror.defineMIME(\"text/x-cython\", {\n    name: \"python\",\n    extra_keywords: words(\"by cdef cimport cpdef ctypedef enum except \"+\n                          \"extern gil include nogil property public \"+\n                          \"readonly struct union DEF IF ELIF ELSE\")\n  });\n\n});\n"],"sourceRoot":""}